name: CI

on:
  pull_request:
  push:
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_RELEASE_LTO: "thin"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: swatinem/rust-cache@v2
      - name: Install Rust components
        run: |
          rustup component add clippy
          rustup component add rustfmt
      - name: Lint
        run: |
          cargo clippy -- -D warnings
          cargo fmt -- --check
      - name: Build
        run: cargo build
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test -- --test-threads=1
  release:
    name: Release - ${{ matrix.platform.os-name }}
    needs: test
    permissions:
      contents: write
    strategy:
      matrix:
        platform:
          - os-name: Linux-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-musl
          - os-name: Linux-aarch64
            runs-on: ubuntu-24.04
            target: aarch64-unknown-linux-musl
          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
          - os-name: macOS-x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin
          - os-name: macOS-aarch64
            runs-on: macOS-latest
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build hoi binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true
      - name: Publish
        uses: houseabsolute/actions-rust-release@v0
        with:
          changes-file: null
          executable-name: hoi
          action-gh-release-parameters: '{ "make_latest": false, "token": "${{ secrets.RELEASE_TOKEN }}" }'
          target: ${{ matrix.platform.target }}
  publish:
    name: Publish to Crates.io
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v')
    environment: crates.io
    steps:
      - uses: actions/checkout@v4
      - uses: swatinem/rust-cache@v2
      - name: Publish
        run: >
          cargo publish
          --verbose
          --locked
          --token ${{ secrets.CARGO_TOKEN }}