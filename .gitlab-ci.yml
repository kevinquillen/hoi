image: rust:latest

stages:
  - lint
  - build
  - test
  - release

variables:
  CARGO_HOME: "${CI_PROJECT_DIR}/.cargo"
  CARGO_TARGET_DIR: "${CI_PROJECT_DIR}/target"
  # Cache dependencies between builds
  CARGO_INCREMENTAL: 0
  # Use thin LTO for linking
  CARGO_PROFILE_RELEASE_LTO: "thin"

.rust-cache:
  cache:
    key:
      files:
        - Cargo.lock
    paths:
      - .cargo/
      - target/

lint:
  stage: lint
  extends: .rust-cache
  script:
    - rustup component add clippy
    - cargo clippy -- -D warnings
    - rustup component add rustfmt
    - cargo fmt -- --check

build:
  stage: build
  extends: .rust-cache
  needs:
    - lint
  script:
    - rustup target add x86_64-unknown-linux-gnu
    - cargo build --release --target x86_64-unknown-linux-gnu
    - mkdir -p artifacts
    - cp target/x86_64-unknown-linux-gnu/release/hoi artifacts/hoi-linux-x86_64
  artifacts:
    paths:
      - artifacts
    expire_in: 1 week

test:
  stage: test
  extends: .rust-cache
  needs:
    - build
  script:
    - cargo test --verbose

release:
  stage: release
  image: gitlab/glab:latest
  extends: .rust-cache
  needs:
    - test
    - build
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - apk add tar
  script:
    - glab auth login --job-token $CI_JOB_TOKEN
    - tar -czvf hoi-linux-x86_64.tar.gz artifacts/hoi-linux-x86_64
    - glab release create $CI_COMMIT_TAG
    - glab release upload $CI_COMMIT_TAG hoi-linux-x86_64.tar.gz